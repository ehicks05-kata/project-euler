package net.ehicks.euler;

import java.util.ArrayList;
import java.util.List;

/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
 */
public class Problem044
{
    private static List<Integer> pentas = new ArrayList<>();

    public static void main(String[] args)
    {
        long startTime = System.currentTimeMillis();

        pentas = getPentagonNumbers();
        int smallestD = Integer.MAX_VALUE;
        for (Integer pj : pentas)
        {
            for (Integer pk : pentas)
            {
                int sum = pj + pk;
                int diff = pj - pk;
                if (isPentagon(sum) && isPentagon(diff))
                {
                    int d = Math.abs(pk - pj);
                    if (d < smallestD)
                    {
                        smallestD = d;
                        System.out.println("Pj: " + pj + ", Pk: " + pk + ", D: " + d);
                    }
                }

            }
        }

        System.out.println("The value of D: " + smallestD);
        System.out.println("Process took " + (System.currentTimeMillis() - startTime) + " ms.");
    }

    private static boolean isPentagon(int number)
    {
        return pentas.contains(number);
    }

    public static List<Integer> getPentagonNumbers()
    {
        List<Integer> pentas = new ArrayList<>();
        for (int i = 1; i < 3000; i++)
        {
            int penta = (i * (3 * i - 1)) / 2;
            pentas.add(penta);
        }

        return pentas;
    }
}
